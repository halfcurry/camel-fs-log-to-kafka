version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - log_pipeline_net

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: kafka
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - ./pipeline_data/kafka_data:/var/lib/kafka/data # Kafka data on local filesystem
    networks:
      - log_pipeline_net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8088:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: "true"
    networks:
      - log_pipeline_net

  file-logger:
    build:
      context: ./file-logger
    container_name: file-logger
    volumes:
      # Mount a local directory for logs. Ensure './pipeline_data/logs' exists on your host.
      - ./pipeline_data/logs:/data/logs
    networks:
      - log_pipeline_net
    # Restart policy can be useful for a logger
    restart: unless-stopped

  camel-quarkus-app:
    build:
      context: ./camel-quarkus-app
    container_name: camel-quarkus-app
    depends_on:
      - kafka
      - file-logger
    volumes:
      # Mount local directory for logs (read-only for this app)
      - ./pipeline_data/logs:/data/logs:ro
      # Mount local directory for checkpoint data (read-write)
      # Ensure './pipeline_data/checkpoint' exists on your host.
      - ./pipeline_data/checkpoint:/data/checkpoint
    environment:
      QUARKUS_PROFILE: prod
      CAMEL_QUARKUS_KAFKA_BROKERS: kafka:9092
      LOG_FILE_PATH: /data/logs/app.log
      CHECKPOINT_DIR_PATH: /data/checkpoint # Path for idempotent repository data
    ports:
      - "8081:8080"
    networks:
      - log_pipeline_net
    restart: unless-stopped


# Removed top-level 'volumes' as we are using host path mounts now.
# You need to create './pipeline_data/logs', './pipeline_data/checkpoint', and './pipeline_data/kafka_data'
# directories in your project root on the host machine before running 'docker-compose up'.

networks:
  log_pipeline_net:
    driver: bridge
